/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.mvc.view;
import edu.ijse.mvc.dto.*;
import edu.ijse.mvc.control.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author user
 */
public class ItemView extends javax.swing.JFrame {
    private ItemController itemcontroller;
    /**
     * Creates new form ItemView
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public ItemView() throws ClassNotFoundException, SQLException {
        initComponents();
        itemcontroller =new ItemController();
        loadtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitle = new javax.swing.JLabel();
        lblcode = new javax.swing.JLabel();
        lbldescription = new javax.swing.JLabel();
        txtcode = new javax.swing.JTextField();
        txtdescription = new javax.swing.JTextField();
        lblunitprice = new javax.swing.JLabel();
        lblqoh = new javax.swing.JLabel();
        txtunitprice = new javax.swing.JTextField();
        txtqoh = new javax.swing.JTextField();
        lblpacksize = new javax.swing.JLabel();
        txtpacksize = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        tblitem = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbltitle.setBackground(new java.awt.Color(204, 204, 204));
        lbltitle.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("Item View");

        lblcode.setText("Code");

        lbldescription.setText("Description");

        lblunitprice.setText("Unit Price");

        lblqoh.setText("QoH");

        lblpacksize.setText("Pack Size");

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        tblitem.setViewportView(tblItem);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbltitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbldescription)
                    .addComponent(lblcode)
                    .addComponent(lblpacksize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtpacksize, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 126, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btndelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnupdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsave))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblqoh)
                                    .addComponent(lblunitprice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtunitprice)
                                    .addComponent(txtqoh, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(51, 51, 51))))
            .addComponent(tblitem)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcode)
                            .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldescription)
                            .addComponent(txtdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblunitprice)
                            .addComponent(txtunitprice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblqoh)
                            .addComponent(txtqoh, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtpacksize, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpacksize))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndelete)
                    .addComponent(btnsave)
                    .addComponent(btnupdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tblitem, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lbltitle.getAccessibleContext().setAccessibleName("");
        lbltitle.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            saveItem();        // TODO add your handling code here:
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {
            updateItem();        // TODO add your handling code here:
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        try {
            searchItem();
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblItemMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
              deleteItem();        // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteActionPerformed

    public void clearform(){
        txtcode.setText("");
        txtdescription.setText("");
        txtpacksize.setText("");
        txtunitprice.setText("");
        txtqoh.setText("");
    }
    public void saveItem() throws ClassNotFoundException, SQLException{
        ItemDto dto =new ItemDto(txtcode.getText(), txtdescription.getText(),txtpacksize.getText(),Double.parseDouble(txtunitprice.getText()), Integer.parseInt(txtqoh.getText()));
        String resp = new ItemController().saveItem(dto);
        clearform();
        loadtable();
        JOptionPane.showMessageDialog(this, resp);
        System.out.println(resp);
    }
    
    public void updateItem()throws ClassNotFoundException, SQLException{
        try{
        ItemDto dto =new ItemDto(txtcode.getText(), txtdescription.getText(),txtpacksize.getText(),Double.parseDouble(txtunitprice.getText()), Integer.parseInt(txtqoh.getText()));
        String rsp = itemcontroller.updateItem(dto);
        JOptionPane.showMessageDialog(this, rsp);
        clearform();
        loadtable();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error at Update Item");
        }
        
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ItemView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ItemView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ItemView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ItemView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ItemView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JLabel lblcode;
    private javax.swing.JLabel lbldescription;
    private javax.swing.JLabel lblpacksize;
    private javax.swing.JLabel lblqoh;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lblunitprice;
    private javax.swing.JTable tblItem;
    private javax.swing.JScrollPane tblitem;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtpacksize;
    private javax.swing.JTextField txtqoh;
    private javax.swing.JTextField txtunitprice;
    // End of variables declaration//GEN-END:variables

    private void loadtable() {
      try {
      String columns[] = {"ItemID","Description","PackSize","UnitPrize","qoh"};
      DefaultTableModel dtm = new DefaultTableModel(columns,0){
         @Override
         public boolean isCellEditable(int row, int column){
             return false;
         } 
      };
      tblItem.setModel(dtm);
      
      ArrayList<ItemDto> itemdtos = itemcontroller.getAllItem();
      for(ItemDto dto : itemdtos){
          Object[] rowdata = {dto.getItemCode(),dto.getDescription(),dto.getPackSize(),dto.getUnitPrize(),dto.getQtyOnHand()};
          dtm.addRow(rowdata);
      }
      
      }
      catch(Exception e){
          JOptionPane.showMessageDialog(this,"Erro at loading table");
      }
    }

    private void searchItem(){
      try{
         
          String itemId = tblItem.getValueAt(tblItem.getSelectedRow(), 0).toString();
          ItemDto dto = itemcontroller.searchItem(itemId);
          
          if(dto != null){
              txtcode.setText(dto.getItemCode());
              txtdescription.setText(dto.getDescription());
              txtpacksize.setText(dto.getPackSize());
              txtunitprice.setText(Double.toString(dto.getUnitPrize()));
              txtqoh.setText(Integer.toString(dto.getQtyOnHand()));
          }else{
              JOptionPane.showMessageDialog(this, "Item Not Found");
          }
          
      }  catch(Exception e){
          JOptionPane.showMessageDialog(this, "Error at Loading Item");
      }
      
    }

    private void deleteItem() {
      try{
          String itemID = txtcode.getText();
          int result =JOptionPane.showConfirmDialog(this, "Selected Item will be permenatly deleted","Warning",JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
          if(result == JOptionPane.OK_OPTION){
          String rsp = itemcontroller.deleteItem(itemID);
          
          clearform();
          loadtable();
          JOptionPane.showMessageDialog(this, rsp);
          }
          
          
          
      }
      catch(Exception e){
          JOptionPane.showMessageDialog(this,"Error to Delete selected Item");
      }
    }
}
